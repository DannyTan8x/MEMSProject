-- MySQL Script generated by MySQL Workbench
-- Tue Sep  3 17:09:10 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mems
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mems` ;

-- -----------------------------------------------------
-- Schema mems
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mems` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `mems` ;

-- -----------------------------------------------------
-- Table `mems`.`departments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`departments` ;

CREATE TABLE IF NOT EXISTS `mems`.`departments` (
  `dept_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `dept_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`dept_id`),
  UNIQUE KEY `dept_name_UNIQUE` (`dept_name`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE UNIQUE INDEX `dept_id_UNIQUE` ON `mems`.`departments` (`dept_id` ASC) VISIBLE;



-- -----------------------------------------------------
-- Table `mems`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`users` ;

CREATE TABLE IF NOT EXISTS `mems`.`users` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_acc` VARCHAR(255) NOT NULL,
  `user_pass` VARCHAR(255) NOT NULL,
  `isLocked` TINYINT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE UNIQUE INDEX `user_id_UNIQUE` ON `mems`.`users` (`user_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `user_acc_UNIQUE` ON `mems`.`users` (`user_acc` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`employees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`employees` ;

CREATE TABLE IF NOT EXISTS `mems`.`employees` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(100) NOT NULL,
  `last_name` VARCHAR(100) NOT NULL,
  `position` VARCHAR(100) NOT NULL,
  `user_id` INT UNSIGNED NULL,
  `dept_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `employees_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `mems`.`users` (`user_id`),
  CONSTRAINT `employees_dept_idfk`
    FOREIGN KEY (`dept_id`)
    REFERENCES `mems`.`departments` (`dept_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE INDEX `employees_user_id_fk` ON `mems`.`employees` (`user_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `user_id_UNIQUE` ON `mems`.`employees` (`user_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `id_UNIQUE` ON `mems`.`employees` (`id` ASC) VISIBLE;

CREATE INDEX `dept_id` ON `mems`.`employees` (`dept_id` ASC) VISIBLE;

--
-- Table structure for table `customers`
--

DROP TABLE IF EXISTS `mems`.`customers`;

CREATE TABLE `customers` (
  `id` int unsigned NOT NULL AUTO_INCREMENT,
  `customer_id` varchar(45) NOT NULL,
  `customer_name` varchar(45) DEFAULT NULL,
  `address` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`,`customer_id`),
  UNIQUE KEY `customer_id_UNIQUE` (`customer_id`),
  UNIQUE KEY `customer_name_UNIQUE` (`customer_name`)
) ENGINE=InnoDB;


-- -----------------------------------------------------
-- Table `mems`.`productTypes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`productTypes` ;

CREATE TABLE IF NOT EXISTS `mems`.`productTypes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `productType_id` VARCHAR(45) NOT NULL,
  `productType_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `productType_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `productType_id_UNIQUE` ON `mems`.`productTypes` (`productType_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `productType_name_UNIQUE` ON `mems`.`productTypes` (`productType_name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`products` ;

CREATE TABLE IF NOT EXISTS `mems`.`products` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `product_id` VARCHAR(45) NOT NULL,
  `productType_id` VARCHAR(45) NOT NULL,
  `product_name` VARCHAR(100) NULL,
  `product_price` INT UNSIGNED NOT NULL,
  `product_description` VARCHAR(100) NULL,
  PRIMARY KEY (`id`, `product_id`),
  CONSTRAINT `product_productType_fk`
    FOREIGN KEY (`productType_id`)
    REFERENCES `mems`.`productTypes` (`productType_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `product_id` ON `mems`.`products` (`product_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `Product_name_UNIQUE` ON `mems`.`products` (`product_name` ASC) VISIBLE;

CREATE INDEX `product_productType_fk` ON `mems`.`products` (`productType_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `product_id_UNIQUE` ON `mems`.`products` (`product_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`salesOrders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`salesOrders` ;

CREATE TABLE IF NOT EXISTS `mems`.`salesOrders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `order_id` VARCHAR(45) NOT NULL,
  `order_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `employee_id` INT NOT NULL,
  `customer_id` VARCHAR(45) NULL,
  `discount` DOUBLE NULL,
  PRIMARY KEY (`id`, `order_id`),
   UNIQUE KEY `order_id_kf_UNIQUE` (`order_id`),
  KEY `cusomer_id_idx` (`customer_id`),
  KEY `employee_id_idx` (`employee_id`),
  CONSTRAINT `cusomer_id` FOREIGN KEY (`customer_id`) REFERENCES `customers` (`customer_id`),
  CONSTRAINT `employee_id` FOREIGN KEY (`employee_id`) REFERENCES `employees` (`id`)
  )ENGINE = InnoDB;

CREATE UNIQUE INDEX `order_id_UNIQUE` ON `mems`.`salesOrders` (`order_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`salesOrderItems`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`salesOrderItems` ;

CREATE TABLE IF NOT EXISTS `mems`.`salesOrderItems` (
  `orderItem_id` INT NOT NULL AUTO_INCREMENT,
  `order_id` VARCHAR(45) NOT NULL,
  `product_id` VARCHAR(45) NOT NULL,
  `Qty` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`orderItem_id`),
  KEY `order_pk_id` (`order_id`),
  KEY `product_id_fk_idx` (`product_id`),
  CONSTRAINT `orderItems_orders_fk`
    FOREIGN KEY (`order_id`)
    REFERENCES `mems`.`salesOrders` (`order_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `product_id_fk` 
  	FOREIGN KEY (`product_id`) 
  	REFERENCES `products` (`product_id`))
ENGINE = InnoDB;

CREATE INDEX `order_id` ON `mems`.`salesOrderItems` (`order_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`purchaseOrders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`purchaseOrders` ;

CREATE TABLE IF NOT EXISTS `mems`.`purchaseOrders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `purchaseOrder_id` VARCHAR(45) NOT NULL,
  `purchaseOrder_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `purchaseOrder_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `purchaseOrders_id_UNIQUE` ON `mems`.`purchaseOrders` (`purchaseOrder_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`purchaseOrderItems`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`purchaseOrderItems` ;

CREATE TABLE `purchaseOrderItems` (
  `purchaseOrderItem_id` int NOT NULL AUTO_INCREMENT,
  `purchaseOrder_id` varchar(45) NOT NULL,
  `product_id` varchar(45) NOT NULL,
  `purchasePrice` int unsigned NOT NULL DEFAULT 0,
  `Qty` int unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`purchaseOrderItem_id`),
  KEY `purchaseOrderItem_id` (`purchaseOrder_id`),
  CONSTRAINT `purchaseOrderItems_purchaseOrder_fk` FOREIGN KEY (`purchaseOrder_id`) REFERENCES `purchaseOrders` (`purchaseOrder_id`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB; 


--
-- Temporary view structure for view `product_inventory`
--

DROP TABLE IF EXISTS `mems`.`product_inventory`;
/*!50001 DROP VIEW IF EXISTS `product_inventory`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `mems`.`product_inventory` AS 
select `p`.`product_id`,
`p`.`product_name`,coalesce(sum(`poi`.`Qty`),0) AS `purchaseAmount`,coalesce(sum(`soi`.`Qty`),0) AS `salesAmount`,
(coalesce(sum(`poi`.`Qty`),0) - coalesce(sum(`soi`.`Qty`),0)) AS `inventoryAmount` from ((`products` `p` 
left join `purchaseorderitems` `poi` on((`p`.`product_id` = `poi`.`product_id`))) 
left join `salesorderitems` `soi` on((`p`.`product_id` = `soi`.`product_id`))) 
group by `p`.`product_id`,`p`.`product_name`*/;
SET character_set_client = @saved_cs_client;

--
-- Final view structure for view `product_inventory`
--

--
-- Temporary view structure for view `OrderForPrint`
--

DROP TABLE IF EXISTS `mems`.`OrderForPrint`;
/*!50001 DROP VIEW IF EXISTS `OrderForPrint`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE VIEW `mems`.`OrderForPrint` AS
select salesOrders.order_id, salesOrders.order_date,  employees.first_name, employees.last_name,customers.customer_name, customers.address, products.product_name, salesOrderItems.Qty
from salesOrders right join employees on salesOrders.employee_id =employees.id
 right join customers on salesOrders.customer_id = customers.customer_id
 right join salesOrderItems on salesOrders.order_id= salesOrderItems.order_id
 left join products on salesOrderItems.product_id = products.product_id          
 order by salesOrders.order_id*/;
SET character_set_client = @saved_cs_client;

--
-- Final view structure for view `OrderForPrint`
--

--
-- Temporary view structure for view `OrderForPrint`
--

DROP TABLE IF EXISTS `mems`.`employeeInfo`;
/*!50001 DROP VIEW IF EXISTS `employeeInfo`*/;
SET @saved_cs_client     = @@character_set_client;
/*!50503 SET character_set_client = utf8mb4 */;
/*!50001 CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mems`.`employeeinfo` AS 
select `mems`.`employees`.`id` AS `id`,`mems`.`employees`.`first_name` AS `first_name`,`mems`.`employees`.`last_name` AS `last_name`,`mems`.`employees`.`position` AS `position`,`mems`.`departments`.`dept_name` AS `dept_name`,`mems`.`employees`.`user_id` AS `user_id`,`mems`.`employees`.`dept_id` AS `dept_id` 
from (`mems`.`employees` left join `mems`.`departments` on((`mems`.`employees`.`dept_id` = `mems`.`departments`.`dept_id`)));
*/;
SET character_set_client = @saved_cs_client;

--
-- Final view structure for view `employeeInfo`
--

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- 插入 departments 表的測試資料
INSERT INTO `mems`.`departments` (`dept_name`)
VALUES 
    ('行政管理部'),
    ('人事部'),
    ('採購部'),
    ('銷售部'),
    ('研發部'),
    ('市場部'),
    ('客服部'),
    ('生產部'),
    ('質量部'),
    ('財務部');

-- 插入 users 表的測試資料
INSERT INTO `mems`.`users` (`user_acc`, `user_pass`, `isLocked`)
VALUES 
    ('admin', '123', 0),
    ('hr', '123', 0),
    ('purchase', '123', 0),
    ('sales', '123', 0),
    ('tianqi', '123', 1),
    ('chenba', '123', 0),
    ('sunjiu', '123', 0),
    ('wuju', '123', 0),
    ('liushi', '123', 1),
    ('zhoupeng', '123', 0);

-- 插入 employees 表的測試資料
INSERT INTO `mems`.`employees` (`first_name`, `last_name`, `position`, `user_id`, `dept_id`)
VALUES 
    ('譚', '旭發', '經理', 1, 1),
    ('李', '人事', '主管', 2, 2),
    ('王', '採購', '管理師', 3, 3),
    ('趙', '業務', '專員', 4, 4),
    ('田', '七', '銷售', 5, 5),
    ('陳', '八', '客服', 6, 6),
    ('孫', '九', '技術員', 7, 7),
    ('吳', '十', '品管', 8, 8),
    ('劉', '十一', '物流', 9, 9),
    ('周', '鵬', '會計', 10, 10);