-- MySQL Script generated by MySQL Workbench
-- Mon Sep  9 09:56:05 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mems
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mems` ;

-- -----------------------------------------------------
-- Schema mems
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mems` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `mems` ;

-- -----------------------------------------------------
-- Table `mems`.`customers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`customers` ;

CREATE TABLE IF NOT EXISTS `mems`.`customers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `customer_id` VARCHAR(45) NOT NULL,
  `customer_name` VARCHAR(45) NULL DEFAULT NULL,
  `address` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `customer_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE UNIQUE INDEX `customer_id_UNIQUE` ON `mems`.`customers` (`customer_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `customer_name_UNIQUE` ON `mems`.`customers` (`customer_name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`departments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`departments` ;

CREATE TABLE IF NOT EXISTS `mems`.`departments` (
  `dept_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `dept_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`dept_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE UNIQUE INDEX `dept_name_UNIQUE` ON `mems`.`departments` (`dept_name` ASC) VISIBLE;

CREATE UNIQUE INDEX `dept_id_UNIQUE` ON `mems`.`departments` (`dept_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`users` ;

CREATE TABLE IF NOT EXISTS `mems`.`users` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_acc` VARCHAR(255) NOT NULL,
  `user_pass` VARCHAR(255) NOT NULL,
  `isLocked` tinyint DEFAULT '0',
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE UNIQUE INDEX `user_id_UNIQUE` ON `mems`.`users` (`user_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `user_acc_UNIQUE` ON `mems`.`users` (`user_acc` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`employees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`employees` ;

CREATE TABLE IF NOT EXISTS `mems`.`employees` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(100) NOT NULL,
  `last_name` VARCHAR(100) NOT NULL,
  `position` VARCHAR(100) NOT NULL,
  `user_id` INT UNSIGNED NULL DEFAULT NULL,
  `dept_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `employees_dept_idfk`
    FOREIGN KEY (`dept_id`)
    REFERENCES `mems`.`departments` (`dept_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `employees_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `mems`.`users` (`user_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE UNIQUE INDEX `id_UNIQUE` ON `mems`.`employees` (`id` ASC) VISIBLE;

CREATE UNIQUE INDEX `user_id_UNIQUE` ON `mems`.`employees` (`user_id` ASC) VISIBLE;

CREATE INDEX `employees_user_id_fk` ON `mems`.`employees` (`user_id` ASC) VISIBLE;

CREATE INDEX `dept_id` ON `mems`.`employees` (`dept_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`producttypes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`producttypes` ;

CREATE TABLE IF NOT EXISTS `mems`.`producttypes` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `productType_id` VARCHAR(45) NOT NULL,
  `productType_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `productType_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE UNIQUE INDEX `productType_id_UNIQUE` ON `mems`.`producttypes` (`productType_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `productType_name_UNIQUE` ON `mems`.`producttypes` (`productType_name` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`products` ;

CREATE TABLE IF NOT EXISTS `mems`.`products` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `product_id` VARCHAR(45) NOT NULL,
  `productType_id` VARCHAR(45) NOT NULL,
  `product_name` VARCHAR(100) NULL DEFAULT NULL,
  `product_price` INT UNSIGNED NOT NULL,
  `product_description` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `product_id`),
  CONSTRAINT `product_productType_fk`
    FOREIGN KEY (`productType_id`)
    REFERENCES `mems`.`producttypes` (`productType_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE UNIQUE INDEX `product_id_UNIQUE` ON `mems`.`products` (`product_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `Product_name_UNIQUE` ON `mems`.`products` (`product_name` ASC) VISIBLE;

CREATE INDEX `product_id` ON `mems`.`products` (`product_id` ASC) VISIBLE;

CREATE INDEX `product_productType_fk` ON `mems`.`products` (`productType_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`purchaseorders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`purchaseorders` ;

CREATE TABLE IF NOT EXISTS `mems`.`purchaseorders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `purchaseOrder_id` VARCHAR(45) NOT NULL,
  `purchaseOrder_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`, `purchaseOrder_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE UNIQUE INDEX `purchaseOrders_id_UNIQUE` ON `mems`.`purchaseorders` (`purchaseOrder_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`purchaseorderitems`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`purchaseorderitems` ;

CREATE TABLE IF NOT EXISTS `mems`.`purchaseorderitems` (
  `purchaseOrderItem_id` INT NOT NULL AUTO_INCREMENT,
  `purchaseOrder_id` VARCHAR(45) NOT NULL,
  `product_id` VARCHAR(45) NOT NULL,
  `purchasePrice` INT UNSIGNED NOT NULL DEFAULT '0',
  `Qty` INT UNSIGNED NOT NULL DEFAULT '0',
  PRIMARY KEY (`purchaseOrderItem_id`),
  CONSTRAINT `purchaseOrderItems_purchaseOrder_fk`
    FOREIGN KEY (`purchaseOrder_id`)
    REFERENCES `mems`.`purchaseorders` (`purchaseOrder_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE INDEX `purchaseOrderItem_id` ON `mems`.`purchaseorderitems` (`purchaseOrder_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`salesorders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`salesorders` ;

CREATE TABLE IF NOT EXISTS `mems`.`salesorders` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `order_id` VARCHAR(45) NOT NULL,
  `order_date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `employee_id` INT NOT NULL,
  `customer_id` VARCHAR(45) NULL DEFAULT NULL,
  `discount` DOUBLE NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `order_id`),
  CONSTRAINT `cusomer_id`
    FOREIGN KEY (`customer_id`)
    REFERENCES `mems`.`customers` (`customer_id`),
  CONSTRAINT `employee_id`
    FOREIGN KEY (`employee_id`)
    REFERENCES `mems`.`employees` (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE UNIQUE INDEX `order_id_kf_UNIQUE` ON `mems`.`salesorders` (`order_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `order_id_UNIQUE` ON `mems`.`salesorders` (`order_id` ASC) VISIBLE;

CREATE INDEX `cusomer_id_idx` ON `mems`.`salesorders` (`customer_id` ASC) VISIBLE;

CREATE INDEX `employee_id_idx` ON `mems`.`salesorders` (`employee_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `mems`.`salesorderitems`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`salesorderitems` ;

CREATE TABLE IF NOT EXISTS `mems`.`salesorderitems` (
  `orderItem_id` INT NOT NULL AUTO_INCREMENT,
  `order_id` VARCHAR(45) NOT NULL,
  `product_id` VARCHAR(45) NOT NULL,
  `Qty` INT UNSIGNED NOT NULL DEFAULT '0',
  PRIMARY KEY (`orderItem_id`),
  CONSTRAINT `orderItems_orders_fk`
    FOREIGN KEY (`order_id`)
    REFERENCES `mems`.`salesorders` (`order_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `product_id_fk`
    FOREIGN KEY (`product_id`)
    REFERENCES `mems`.`products` (`product_id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

CREATE INDEX `order_pk_id` ON `mems`.`salesorderitems` (`order_id` ASC) VISIBLE;

CREATE INDEX `product_id_fk_idx` ON `mems`.`salesorderitems` (`product_id` ASC) VISIBLE;

CREATE INDEX `order_id` ON `mems`.`salesorderitems` (`order_id` ASC) VISIBLE;

USE `mems` ;

-- -----------------------------------------------------
-- View `mems`.`employeeinfo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`employeeinfo`;
DROP VIEW IF EXISTS `mems`.`employeeinfo` ;
USE `mems`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mems`.`employeeinfo` AS select `mems`.`employees`.`id` AS `id`,`mems`.`employees`.`first_name` AS `first_name`,`mems`.`employees`.`last_name` AS `last_name`,`mems`.`employees`.`position` AS `position`,`mems`.`departments`.`dept_name` AS `dept_name`,`mems`.`employees`.`user_id` AS `user_id`,`mems`.`employees`.`dept_id` AS `dept_id` from (`mems`.`employees` left join `mems`.`departments` on((`mems`.`employees`.`dept_id` = `mems`.`departments`.`dept_id`)));

-- -----------------------------------------------------
-- View `mems`.`orderforprint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`orderforprint`;
DROP VIEW IF EXISTS `mems`.`orderforprint` ;
USE `mems`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mems`.`orderforprint` AS select `mems`.`salesorders`.`order_id` AS `order_id`,`mems`.`salesorders`.`order_date` AS `order_date`,`mems`.`employees`.`first_name` AS `first_name`,`mems`.`employees`.`last_name` AS `last_name`,`mems`.`customers`.`customer_name` AS `customer_name`,`mems`.`customers`.`address` AS `address`,`mems`.`products`.`product_name` AS `product_name`,`mems`.`salesorderitems`.`Qty` AS `Qty` from ((`mems`.`salesorderitems` left join (`mems`.`customers` left join (`mems`.`employees` left join `mems`.`salesorders` on((`mems`.`salesorders`.`employee_id` = `mems`.`employees`.`id`))) on((`mems`.`salesorders`.`customer_id` = `mems`.`customers`.`customer_id`))) on((`mems`.`salesorders`.`order_id` = `mems`.`salesorderitems`.`order_id`))) left join `mems`.`products` on((`mems`.`salesorderitems`.`product_id` = `mems`.`products`.`product_id`))) order by `mems`.`salesorders`.`order_id`;

-- -----------------------------------------------------
-- View `mems`.`purchaseorderdetail`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`purchaseorderdetail`;
DROP VIEW IF EXISTS `mems`.`purchaseorderdetail` ;
USE `mems`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mems`.`purchaseorderdetail` AS select `mems`.`purchaseorderitems`.`purchaseOrderItem_id` AS `purchaseOrderItem_id`,
`mems`.`purchaseorderitems`.`purchaseOrder_id` AS `purchaseOrder_id`,
`mems`.`purchaseorderitems`.`product_id` AS `product_id`,
`mems`.`products`.`product_name` AS `product_name`,
`mems`.`purchaseorderitems`.`purchasePrice` AS `purchasePrice`,
`mems`.`purchaseorderitems`.`Qty` AS `Qty` 
from (`mems`.`purchaseorderitems` 
left join `mems`.`products` on((`mems`.`purchaseorderitems`.`product_id` = `mems`.`products`.`product_id`)));

-- -----------------------------------------------------
-- View `mems`.`salesorderdetail`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`salesorderdetail`;
DROP VIEW IF EXISTS `mems`.`salesorderdetail` ;
USE `mems`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mems`.`salesorderdetail` AS 
select `mems`.`salesorderitems`.`orderItem_id` AS `salesOrderItem_id`,
`mems`.`salesorderitems`.`order_id` AS `salesOrder_id`,
`mems`.`salesorderitems`.`product_id` AS `product_id`,
`mems`.`products`.`product_name` AS `product_name`,
`mems`.`products`.`product_price` AS `product_price`,
`mems`.`salesorderitems`.`Qty` AS `Qty` 
from (`mems`.`salesorderitems` 
left join `mems`.`products` on((`mems`.`salesorderitems`.`product_id` = `mems`.`products`.`product_id`)));

-- -----------------------------------------------------
-- View `mems`.`product_inventory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mems`.`product_inventory`;
DROP VIEW IF EXISTS `mems`.`product_inventory` ;
USE `mems`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `mems`.`product_inventory` AS SELECT 
        `p`.`productType_id` AS `productType_id`,
        `pt`.`productType_name` AS `productType_name`,
        `p`.`product_id` AS `product_id`,
        `p`.`product_name` AS `product_name`,
        `p`.`product_price` AS `product_price`,
        COALESCE(SUM(`poi`.`Qty`), 0) AS `purchaseAmount`,
        COALESCE(SUM(`soi`.`Qty`), 0) AS `salesAmount`,
        (COALESCE(SUM(`poi`.`Qty`), 0) - COALESCE(SUM(`soi`.`Qty`), 0)) AS `inventoryAmount`
    FROM
        (((`mems`.`products` `p`
        LEFT JOIN `mems`.`purchaseorderitems` `poi` ON ((`p`.`product_id` = `poi`.`product_id`)))
        LEFT JOIN `mems`.`salesorderitems` `soi` ON ((`p`.`product_id` = `soi`.`product_id`)))
        LEFT JOIN `mems`.`producttypes` `pt` ON ((`p`.`productType_id` = `pt`.`productType_id`)))
    GROUP BY `p`.`product_id` , `p`.`product_name`;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- 插入 departments 表的測試資料
INSERT INTO `mems`.`departments` (`dept_name`)
VALUES 
    ('行政管理部'),
    ('人事部'),
    ('資產部'),
    ('銷售部'),
    ('研發部'),
    ('市場部'),
    ('客服部'),
    ('生產部'),
    ('質量部'),
    ('財務部');

-- 插入 users 表的測試資料
INSERT INTO `mems`.`users` (`user_acc`, `user_pass`, `isLocked`)
VALUES 
    ('admin', '123', 0),
    ('hr', '123', 0),
    ('Warehouse', '123', 0),
    ('sales', '123', 0),
    ('tianbing', '123', 1),
    ('chenba', '123', 0),
    ('sunjiu', '123', 0),
    ('wuju', '123', 0),
    ('liushi', '123', 1),
    ('zhoupeng', '123', 0);

-- 插入 employees 表的測試資料
INSERT INTO `mems`.`employees` (`first_name`, `last_name`, `position`, `user_id`, `dept_id`)
VALUES 
    ('譚', '旭發', '總經理', 1, 1),
    ('李', '人事', '處長', 2, 2),
    ('王', '倉管', '管理師', 3, 3),
    ('趙', '業務', '經理', 4, 4),
    ('天', '兵', '銷售', 5, 5),
    ('陳', '八', '客服', 6, 6),
    ('孫', '九', '技術員', 7, 7),
    ('吳', '十', '品管', 8, 8),
    ('劉', '十一', '物流', 9, 9),
    ('周', '鵬', '會計', 10, 10);